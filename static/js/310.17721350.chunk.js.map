{"version":3,"file":"static/js/310.17721350.chunk.js","mappings":"gTAGaA,EAAOC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,whBA+BlBC,EAAkBH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gIAS5BG,GAAeL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,gJ,SCmBxC,EAnDe,WACb,IAAAM,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAT,EAAAA,EAAAA,GAAAO,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAWC,EAAAA,EAAAA,MAEXC,EAAQJ,EAAaK,IAAI,MAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAc,OAAVF,EAAJ,CAEA,IAAMG,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,GAAU,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEd,OAFcF,EAAAC,KAAA,EAEhCpB,GAAa,GAAKmB,EAAAE,KAAA,GACCC,EAAAA,EAAAA,IAAoBN,GAAW,OAA5CC,EAAIE,EAAAI,KACJL,EAAYD,EAAKO,QAAQC,QAAO,SAAAC,GACpC,OAA6B,OAAtBA,EAAMC,YAA+C,OAAxBD,EAAME,aAC5C,IACAhC,EAAUsB,GAAUC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAEpBW,EAAAA,GAAAA,MAAYX,EAAAU,GAAME,SAClB/B,GAAa,GAAM,QAEA,OAFAmB,EAAAC,KAAA,GAEnBpB,GAAa,GAAMmB,EAAAa,OAAA,6BAAAb,EAAAc,OAAA,GAAAlB,EAAA,wBAEtB,gBAdemB,GAAA,OAAAtB,EAAAuB,MAAA,KAAAC,UAAA,KAgBhBzB,EAAWH,EAlBe,CAmB5B,GAAG,CAACA,IAOJ,OACE6B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAACvD,EAAI,CAACyD,SARW,SAACC,GACpBA,EAAEC,iBACF,IAAMzB,EAAawB,EAAEE,cAAcC,SAASC,OAAOC,MACnDxC,EAAgB,CAACyC,EAAG9B,GACtB,EAIiCsB,SAAA,EAC3BS,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,KAAK,SAASC,aAAc1C,EAAO2C,YAAY,eAClEJ,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQV,SAAE,eAEzBS,EAAAA,EAAAA,KAAC7D,EAAe,CAAAoD,SACb3C,EAAOyD,OAAS,GAAKzD,EAAO0D,KAAI,SAAA3B,GAAK,OACpCqB,EAAAA,EAAAA,KAAC3D,EAAY,CAACkE,GAAE,WAAAC,OAAa7B,EAAM8B,IAAMC,MAAO,CAACC,KAAMpD,GAAUgC,UAAiBS,EAAAA,EAAAA,KAACY,EAAAA,GAAS,CAACC,UAAWlC,KAAjCA,EAAM8B,GAAmD,MAGnIzD,IAAagD,EAAAA,EAAAA,KAACc,EAAAA,EAAM,MAG3B,C","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin: 40px 0;\n\n  > input {\n    width: 40%;\n    max-width: 400px;\n    font-size: 30px;\n    padding: 8px 30px;\n    text-transform: capitalize;\n    outline: none;\n    border-radius: 6px 0 0 6px;\n    border: none;\n  }\n\n  > button {\n    font-size: 30px;\n    outline: none;\n    padding: 8px 30px;\n    border-radius: 0 6px 6px 0;\n    border: none;\n    cursor: pointer;\n    background-color: #778899;\n    transition: ease-in 0.1s;\n\n    &:hover,\n    &:focus {\n      background-color: #99aacc;\n    }\n  }\n`;\n\nexport const MoviesContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  width: 100%;\n  height: auto;\n  text-decoration: none;\n`;\n\nexport const StyledMovies = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  width: 100%;\n  height: auto;\n  text-decoration: none;\n  color: grey;\n`;\n","import React, { useEffect, useState } from 'react'\nimport { useLocation, useSearchParams } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport { MovieCard } from 'components'\n\nimport { Loader } from 'helpers/Loader/Loader'\nimport { fetchSearchedMovies } from 'services/api'\n\nimport { Form, MoviesContainer, StyledMovies } from './Movies.styled'\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation()\n  \n  const query = searchParams.get('q')\n\n  useEffect(() => {\n    if (query === null) return\n\n    const fetchMovie = async (searchTerm) => {\n      try {\n        setIsLoading(true)\n        const data = await fetchSearchedMovies(searchTerm)\n        const validData = data.results.filter(movie => {\n          return movie.poster_path !== null & movie.backdrop_path !== null\n        })\n        setMovies(validData)\n      } catch (error) {\n        toast.error(error.message)\n        setIsLoading(false)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n    \n    fetchMovie(query)\n  }, [query])\n  const handleSearch = (e) => {\n    e.preventDefault()\n    const searchTerm = e.currentTarget.elements.search.value\n    setSearchParams({q: searchTerm})\n  }\n\n  return (\n    <div>\n      <Form onSubmit={handleSearch}>\n        <input type=\"text\" name=\"search\" defaultValue={query} placeholder='search...'/>\n        <button type='submit' >Search</button>\n      </Form>\n      <MoviesContainer>\n        {movies.length > 0 && movies.map(movie => \n          <StyledMovies to={`/movies/${movie.id}`} state={{from: location}} key={movie.id} ><MovieCard movieInfo={movie} /></StyledMovies>\n        )}\n      </MoviesContainer>\n      {isLoading && <Loader/>}\n    </div>\n  )\n}\n\nexport default Movies\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","MoviesContainer","_templateObject2","StyledMovies","Link","_templateObject3","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","query","get","useEffect","fetchMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","searchTerm","data","validData","_context","prev","next","fetchSearchedMovies","sent","results","filter","movie","poster_path","backdrop_path","t0","toast","message","finish","stop","_x","apply","arguments","_jsxs","children","onSubmit","e","preventDefault","currentTarget","elements","search","value","q","_jsx","type","name","defaultValue","placeholder","length","map","to","concat","id","state","from","MovieCard","movieInfo","Loader"],"sourceRoot":""}