{"version":3,"file":"static/js/976.2fbfae76.chunk.js","mappings":"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","sources":["components/CommentItem/CommentsItem.styled.js","components/CommentItem/CommentItem.jsx","components/Comments/Comments.styled.js","components/Comments/Comments.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledItem = styled.li`\n  margin-bottom: 24px;\n\n  > h4 {\n    font-family: Georgia, 'Times New Roman', Times, serif;\n    font-size: 40px;\n    margin-bottom: 16px;\n    color: lightgrey;\n  }\n\n  > p {\n    font-size: 29px;\n    line-height: 1.2;\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 24px;\n  color: green;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  float: right;\n  margin-right: 120px;\n  margin-top: 16px;\n\n  transition: ease-in 0.1s;\n\n  &:hover,\n  &:focus {\n    color: limegreen;\n  }\n`;\n","import React, { useState } from 'react'\n\nimport { Button, StyledItem } from './CommentsItem.styled'\n\nexport const CommentItem = ({ comment }) => {\n  const [readMore, setReadMore] = useState(true)\n  const isLong = comment.content.length > 700\n\n  return (\n    <StyledItem>\n      <h4>Author: {comment.author}</h4>\n      {isLong && readMore && <>\n        <p>{comment.content.slice(0, 500)} ...</p>\n        <Button onClick={() => setReadMore(false)}>Read more</Button>\n      </>}\n      {isLong && !readMore && <>\n        <p>{comment.content}</p>\n        <Button onClick={() => setReadMore(true)}>Collapse</Button>\n      </>}\n      {!isLong && <p>{comment.content}</p>}\n    </StyledItem>\n  )\n}\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 36px;\n`;\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { toast } from 'react-toastify';\n\nimport { CommentItem } from 'components/CommentItem/CommentItem';\nimport { Loader } from 'helpers/Loader/Loader';\n\nimport { fetchMovieComments } from 'services/api';\nimport { StyledList } from './Comments.styled';\n\nconst Comments = () => {\n  const [comments, setComments] = useState([]);\n  const [isLoading, setIsLoading] = useState(false)\n  const [isSuccess, setIsSuccess] = useState(false)\n\n  const movieId = useParams().movieId;\n  \n  useEffect(() => {\n\n    const fetchData = async () => {\n      try { \n        setIsLoading(true)\n        const data = await fetchMovieComments(movieId)\n        setComments(data.results);\n        setIsSuccess(true)\n      } catch (error) {\n        toast.error(error.message)\n        setIsLoading(false)\n        setIsSuccess(false)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n    \n    fetchData(movieId);\n  }, [movieId])\n\n  return (\n    <StyledList>\n      {comments.length > 0 & isSuccess ? comments.slice(0, 5).map(comment => {\n        return <CommentItem key={comment.id} comment={comment} />\n      }) : ''}\n      {isSuccess & comments.length === 0 ? 'This movie has no comments yet.' : ''}\n      {isLoading && <Loader/>}\n    </StyledList>\n  )\n}\n\nexport default Comments"],"names":["StyledItem","styled","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","CommentItem","_ref","comment","_useState","useState","_useState2","_slicedToArray","readMore","setReadMore","isLong","content","length","_jsxs","children","author","_Fragment","slice","_jsx","onClick","StyledList","comments","setComments","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isSuccess","setIsSuccess","movieId","useParams","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchMovieComments","sent","results","t0","toast","message","finish","stop","apply","arguments","map","id","Loader"],"sourceRoot":""}